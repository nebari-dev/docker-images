name: docker-build-artifact-upload
description: Download parent image, build new one, and upload to GitHub artifacts

inputs:
  image:
    description: Image name
    required: true
    type: string
  dockerFile:
    description: Docker file image name
    required: true
    type: string
  platform:
    description: Image platform
    required: false
    default: amd64
    type: string

runs:
  using: composite
  steps:
    # This will use a new image that will works as a BASE template for the others

    # - name: Load parent built image to Docker 📥
    #   # if: ${{ inputs.parentImage != '' }}
    #   uses: ./.github/actions/load-image
    #   with:
    #     image: ${{ inputs.parentImage }}
    #     platform: ${{ inputs.platform }}
    # ${DOCKER_ORG}/${{ matrix.dockerfile }}:${{ env.GITHUB_SHA }}

    - name: Set dev image tag ⌛
      id: tag
      run: |
        echo "Setting new image tag to: ${{ inputs.image }}"
        echo ::set-output name=created::"${{ inputs.image }}:$(date +%Y%m%d%H%M%S) "
      shell: bash

    # Run only if docker files were changed
    - name: Build image 🛠
      run: |
        docker build --rm --force-rm --tag nebari/${{ steps.tag.outputs.created }} -f ./${{ inputs.image }}/${{ inputs.dockerFile }} .
      env:
        DOCKER_BUILDKIT: 1
        # Full logs for CI build
        BUILDKIT_PROGRESS: plain
      shell: bash

    - name: Save image as a tar for later use 💾
      run: docker save nebari/${{ steps.tag.outputs.created }} -o /tmp/${{ inputs.image }}-${{ inputs.platform }}.tar
      shell: bash

    - name: Upload image as artifact 💾
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.image }}-${{ inputs.platform }}
        path: /tmp/${{ inputs.image }}-${{ inputs.platform }}.tar
        retention-days: 3

    - name: Cleanup artifacts 🗑️
      run: |
        rm -f /tmp/${{ inputs.image }}-${{ inputs.platform }}.tar || true
      shell: bash
      if: always()