# Build and push images to:
# GitHub Container Registry (ghcr.io)
# Red Hat Container Registry (quay.io)
name: "Build Docker Images"

on:
  push:
    branches:
      - main
    paths:
      - "Dockerfile.*"
      - "dask-worker"
      - "jupyterhub"
      - "jupyterlab"
      - ".github/workflows/build-push-docker.yaml"
    tags:
      - "*"

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write

jobs:
  build-images:
    name: "Build Docker Images"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile:
          - jupyterlab
          - jupyterhub
          - dask-worker
    steps:
      - name: "Checkout Repository 🛎️"
        uses: actions/checkout@v3

      - name: "Set up Docker Buildx 🛠️"
        uses: docker/setup-buildx-action@v2

      - name: "Login to GitHub Container Registry 🔐"
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: "Login to Quay Container Registry 🔐"
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: "Generate Docker images tags 🏷️"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            "quay.io/nebari/nebari-${{ matrix.dockerfile }}"
            "ghcr.io/nebari-dev/nebari-${{ matrix.dockerfile }}"
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: "Inspect image dir tree 🔍"
        run: |
          sudo apt-get install tree
          tree .

      - name: "Set tag var 🏷️"
        id: var
        run: echo ::set-output name=docker_tag::$(echo "${{ steps.meta.outputs.tags }}" | sed -n 1p)

      - name: "Build docker images 🐳"
        uses: docker/build-push-action@v3
        with:
          context: .
          file: "Dockerfile.${{ matrix.dockerfile }}"
          tags: ${{ steps.meta.outputs.tags }}
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
