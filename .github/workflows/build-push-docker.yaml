# Build and push images to:
# GitHub Container Registry (ghcr.io)
# Red Hat Container Registry (quay.io)
name: "Build Docker Images"

on:
  push:
    branches:
      - main
    paths:
      - "Dockerfile.*"
      - "dask-worker/*"
      - "jupyterhub/*"
      - "jupyterlab/*"
      - "scripts/*"
      - ".github/workflows/build-push-docker.yaml"
    tags:
      - "*"

env:
  DOCKER_ORG: nebari
  GPU_BASE_IMAGE: nvidia/cuda:11.7.0-base-ubuntu20.04
  GPU_IMAGE_SUFFIX: gpu
  BASE_IMAGE: ubuntu:20.04

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write

jobs:
  build-images:
    name: "Build Docker Images"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile:
          - jupyterlab
          - jupyterhub
          - dask-worker
        platform:
          - gpu
          - cpu
        exclude:
          # excludes JupyterHub/GPU
          - dockerfile: jupyterhub
            platform: gpu

    steps:
      - name: "Checkout Repository üõéÔ∏è"
        uses: actions/checkout@v3

      - name: "Set up Docker Buildx üõ†Ô∏è"
        uses: docker/setup-buildx-action@v2

      - name: "Login to GitHub Container Registry üîê"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.BOT_GHCR_TOKEN }}

      - name: "Login to Quay Container Registry üîê"
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: "Set BASE_IMAGE and Image Suffix üì∑"
        if: ${{ matrix.platform == 'gpu' }}
        run: |
          echo "GPU Platform Matrix"
          echo "BASE_IMAGE=$GPU_BASE_IMAGE" >> $GITHUB_ENV
          echo "IMAGE_SUFFIX=-$GPU_IMAGE_SUFFIX" >> $GITHUB_ENV

      - name: "Generate Docker images tags üè∑Ô∏è"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            "quay.io/${{ env.DOCKER_ORG }}/nebari-${{ matrix.dockerfile }}${{ env.IMAGE_SUFFIX }}"
            "ghcr.io/${{ github.repository_owner }}/nebari-${{ matrix.dockerfile }}${{ env.IMAGE_SUFFIX }}"
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: "Inspect image dir tree üîç"
        run: |
          sudo apt-get install tree
          tree .

      - name: "Set tag var üè∑Ô∏è"
        id: var
        run: echo "docker_tag=$(echo '${{ steps.meta.outputs.tags }}'' | sed -n 1p)"  >> $GITHUB_OUTPUT

      - name: "Build docker images üê≥"
        uses: docker/build-push-action@v3
        with:
          context: .
          file: "Dockerfile.${{ matrix.dockerfile }}"
          tags: ${{ steps.meta.outputs.tags }}
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: BASE_IMAGE=${{ env.BASE_IMAGE }}
