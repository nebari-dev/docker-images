name: Build and Test

on:
  pull_request:
    paths:
      - ".github/workflows/docker-build-test.yaml"

      # We use local reusable workflows to make architecture clean an simple
      # https://docs.github.com/en/actions/using-workflows/reusing-workflows
      - ".github/actions/build-artifact-upload/**"
      - ".github/actions/load-image/**"
      - ".github/actions/create-pip-env/**"
      - ".github/actions/build-conda-env/**"
      - ".github/actions/lint-docker-files/**"

      - "dask-worker/**"
      - "jupyterlab/**"
      - "jupyterhub/**"
      - "scripts/**"

  push:
    paths:
      - ".github/workflows/docker-build-test.yaml"

      - ".github/actions/build-artifact-upload/**"
      - ".github/actions/load-image/**"
      - ".github/actions/create-pip-env/**"
      - ".github/actions/build-conda-env/**"
      - ".github/actions/lint-docker-files/**"

      - "dask-worker/**"
      - "jupyterlab/**"
      - "jupyterhub/**"
      - "scripts/**"

  workflow_dispatch:


# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  # only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  lint-docker-files:
    if: github.event.pull_request.merged == false
    name: 'Lint Docker files'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - jupyterlab
          - jupyterhub
          - dask-worker
    steps:
      - name: Checkout Infrastructure ‚ö°Ô∏è
        uses: actions/checkout@v3

      - name: Lint docker file
        uses: ./.github/actions/lint-docker-files
        with:
          file-path: "${{ matrix.image }}/Dockerfile.${{ matrix.image }}"

  validate-conda-environment:
    if: github.event.pull_request.merged == false
    name: 'Build & validate conda environment'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - jupyterlab
          - jupyterhub
          - dask-worker
    steps:
      - name: Checkout Infrastructure ‚ö°Ô∏è
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        with:
          # Detect changes against the most recent commit on the same branch before the push
          base: ${{ github.ref }}
          filters: |
            source:
              - '${{ matrix.image }}/environment.yaml'
        id: filter


      # Run only if `source-path`files weren't changed
      - name: Terminate if file not updated
        if: steps.filter.outputs.source == 'false'
        run: |
          echo -e "\e[1;32m No changes detected, skipping build \e[0m \u2705"
          exit 0
        shell: bash

      # Run only if `source-path`files were changed
      - name: Build environment
        if: steps.filter.outputs.source == 'true'
        uses: ./.github/actions/build-conda-env
        with:
          environment-path: ${{ matrix.image }}/environment.yaml


  docker-build-test:
    # Avoid running the pipeline twice, if the PR is already merged
    if: github.event.pull_request.merged == false
    name: 'Build & test Docker Images'
    runs-on: ubuntu-latest
    needs: [lint-docker-files, validate-conda-environment]
    strategy:
      matrix:
        image:
          - jupyterlab
          - jupyterhub
          - dask-worker

    steps:
      - name: Checkout Infrastructure ‚ö°Ô∏è
        uses: actions/checkout@v3

      - name: Set up Dev environment üì¶
        uses: ./.github/actions/create-pip-env
        with:
          python-version: 3.8

      - uses: dorny/paths-filter@v2
        with:
          # Detect changes against the most recent commit on the same branch before the push
          base: ${{ github.ref }}
          filters: |
            source:
              - 'scripts/**'
              - '${{ matrix.image }}/**'
        id: filter


      # Run only if docker files weren't changed
      - name: Terminate if file not updated
        if: steps.filter.outputs.source == 'false'
        run: |
          echo -e "\e[1;32m No changes detected, skipping build \e[0m \u2705"
          exit 0
        shell: bash

      # Run only if docker files changed
      - name: Linux-amd64
        if: steps.filter.outputs.source == 'true'
        uses: ./.github/actions/build-artifact-upload
        with:
          dockerFile: Dockerfile.${{ matrix.image }}
          image: ${{ matrix.image }}
          platform: amd64

      # - name: Run tests ‚úÖ
      #   run: python3 -m tests.run_tests --short-image-name ${{ matrix.image }}
      #   shell: bash